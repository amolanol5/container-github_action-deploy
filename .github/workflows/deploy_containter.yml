name: Deploy container app python
on:
  workflow_dispatch:

env:
  ECS_CLUSTER: "cluster"
  AWS_REGION: "us-east-1"
  ECR_REGISTRY: "515411507312.dkr.ecr.us-east-1.amazonaws.com"
  ENVIRONMENT: "dev"
  
jobs:
  set-parameters:
    name: set-parameters
    runs-on: ubuntu-latest
    outputs:
      docker_repo: ${{ steps.app_params.outputs.docker_repo }}
      container_name: ${{ steps.app_params.outputs.container_name }}
      service_name: ${{ steps.app_params.outputs.service_name }}
      commit_sha: ${{ steps.app_params.outputs.commit_sha }}
    steps:
      - name: Set App parameters
        id: app_params
        run: |
            echo "::set-output name=docker_repo::${ENVIRONMENT}-container-github_action-deploy"
            echo "::set-output name=container_name::${ENVIRONMENT}-container-name-app-python"
            echo "::set-output name=service_name::service1"
            echo "---------------------------------------------------------------------------"
            echo "::set-output name=commit_sha::${GITHUB_SHA::7}"

  build-and-push:
    name: build-image
    runs-on: ubuntu-latest
    needs: [ set-parameters ]
    env:
      DOCKER_REPO: "${{ needs.set-parameters.outputs.docker_repo }}"
      IMAGE_TAG: "${{ needs.set-parameters.outputs.commit_sha }}"
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push to local registry
        id: build-push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ needs.set-parameters.outputs.docker_repo }}:${{ env.IMAGE_TAG }}
          
  deploy:
      name: deploy-artifact
      runs-on: ubuntu-latest
      needs: [ build-and-push, set-parameters ]
      env:
        CONTAINER:  "${{ needs.set-parameters.outputs.container_name }}"     
        TASK_DEFINITION_FILE: ".github/task-definition.json"
      steps:
        - name: Checkout
          id: checkout
          uses: actions/checkout@v2

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}
        
        - name: Get task definition
          run: |
            echo $CONTAINER
            aws ecs describe-task-definition --task-definition "${{ env.CONTAINER }}" --query "taskDefinition" > "${{ env.TASK_DEFINITION_FILE }}" --region "${{ env.AWS_REGION }}"
            cat ${{ env.TASK_DEFINITION_FILE }}
            echo $TASK_DEFINITION_FILE

        - name: Render Amazon ECS task definition with scheduler container
          id: render-scheduler-container
          uses: aws-actions/amazon-ecs-render-task-definition@v1
          with:
            task-definition: ${{ env.TASK_DEFINITION_FILE }}
            container-name: "${{ env.CONTAINER }}"
            image: "${{ env.ECR_REGISTRY }}/${{ needs.set-parameters.outputs.docker_repo }}:${{ needs.set-parameters.outputs.commit_sha }}"

        - name: cat scheduler task
          run: |
            cat ${{ steps.render-scheduler-container.outputs.task-definition }}

        - name: Deploy task definition
          uses: aws-actions/amazon-ecs-deploy-task-definition@v1
          with:
            task-definition: ${{ steps.render-scheduler-container.outputs.task-definition }}
            service: ${{ needs.set-parameters.outputs.service_name }}
            cluster: "${{ env.ENVIRONMENT }}-${{ env.ECS_CLUSTER }}"
            wait-for-service-stability: true
            wait-for-minutes: 8
